// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package csrng_reg_pkg;

  // Param list
  parameter int NSwApps = 4;
  parameter int NHwApps = 4;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////
  typedef struct packed {
    struct packed {
      logic        q;
    } cs_ins_req_done;
    struct packed {
      logic        q;
    } cs_res_req_done;
    struct packed {
      logic        q;
    } cs_gen_req_done;
    struct packed {
      logic        q;
    } cs_upd_req_done;
    struct packed {
      logic        q;
    } cs_uni_req_done;
    struct packed {
      logic        q;
    } cs_fifo_err;
  } csrng_reg2hw_intr_state_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } cs_ins_req_done;
    struct packed {
      logic        q;
    } cs_res_req_done;
    struct packed {
      logic        q;
    } cs_gen_req_done;
    struct packed {
      logic        q;
    } cs_upd_req_done;
    struct packed {
      logic        q;
    } cs_uni_req_done;
    struct packed {
      logic        q;
    } cs_fifo_err;
  } csrng_reg2hw_intr_enable_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
      logic        qe;
    } cs_ins_req_done;
    struct packed {
      logic        q;
      logic        qe;
    } cs_res_req_done;
    struct packed {
      logic        q;
      logic        qe;
    } cs_gen_req_done;
    struct packed {
      logic        q;
      logic        qe;
    } cs_upd_req_done;
    struct packed {
      logic        q;
      logic        qe;
    } cs_uni_req_done;
    struct packed {
      logic        q;
      logic        qe;
    } cs_fifo_err;
  } csrng_reg2hw_intr_test_reg_t;

  typedef struct packed {
    logic        q;
  } csrng_reg2hw_cs_regen_reg_t;

  typedef struct packed {
    struct packed {
      logic        q;
    } cs_enable;
    struct packed {
      logic [3:0]  q;
    } fifo_depth_sts_sel;
  } csrng_reg2hw_cs_ctrl_reg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_ins_req_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_seed_clr_mreg_t;

  typedef struct packed {
    logic        q;
  } csrng_reg2hw_cs_det_mode_mreg_t;

  typedef struct packed {
    logic [31:0] q;
    logic        qe;
  } csrng_reg2hw_cs_app_ins_seed_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_res_req_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_gen_req_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_rnd_out_clr_mreg_t;

  typedef struct packed {
    logic        q;
  } csrng_reg2hw_cs_app_pre_res_mreg_t;

  typedef struct packed {
    logic [31:0] q;
    logic        re;
  } csrng_reg2hw_cs_rnd_out_bits_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_upd_req_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_add_data_clr_mreg_t;

  typedef struct packed {
    logic [31:0] q;
    logic        qe;
  } csrng_reg2hw_cs_add_data_in_mreg_t;

  typedef struct packed {
    logic        q;
    logic        qe;
  } csrng_reg2hw_cs_app_uni_req_mreg_t;


  typedef struct packed {
    struct packed {
      logic        d;
      logic        de;
    } cs_ins_req_done;
    struct packed {
      logic        d;
      logic        de;
    } cs_res_req_done;
    struct packed {
      logic        d;
      logic        de;
    } cs_gen_req_done;
    struct packed {
      logic        d;
      logic        de;
    } cs_upd_req_done;
    struct packed {
      logic        d;
      logic        de;
    } cs_uni_req_done;
    struct packed {
      logic        d;
      logic        de;
    } cs_fifo_err;
  } csrng_hw2reg_intr_state_reg_t;

  typedef struct packed {
    struct packed {
      logic [23:0] d;
      logic        de;
    } fifo_depth_sts;
    struct packed {
      logic        d;
      logic        de;
    } diag;
  } csrng_hw2reg_cs_sum_sts_reg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } csrng_hw2reg_cs_app_ins_ack_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
    logic        de;
  } csrng_hw2reg_cs_app_ins_sts_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
  } csrng_hw2reg_cs_app_seed_fifo_sts_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } csrng_hw2reg_cs_app_res_ack_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
    logic        de;
  } csrng_hw2reg_cs_app_res_sts_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } csrng_hw2reg_cs_app_gen_ack_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
    logic        de;
  } csrng_hw2reg_cs_app_gen_sts_mreg_t;

  typedef struct packed {
    logic        d;
  } csrng_hw2reg_cs_app_gen_rnd_out_vld_mreg_t;

  typedef struct packed {
    logic [31:0] d;
  } csrng_hw2reg_cs_rnd_out_bits_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } csrng_hw2reg_cs_app_upd_ack_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
    logic        de;
  } csrng_hw2reg_cs_app_upd_sts_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
  } csrng_hw2reg_cs_add_data_fifo_sts_mreg_t;

  typedef struct packed {
    logic        d;
    logic        de;
  } csrng_hw2reg_cs_app_uni_ack_mreg_t;

  typedef struct packed {
    logic [1:0]  d;
    logic        de;
  } csrng_hw2reg_cs_app_uni_sts_mreg_t;


  ///////////////////////////////////////
  // Register to internal design logic //
  ///////////////////////////////////////
  typedef struct packed {
    csrng_reg2hw_intr_state_reg_t intr_state; // [497:492]
    csrng_reg2hw_intr_enable_reg_t intr_enable; // [491:486]
    csrng_reg2hw_intr_test_reg_t intr_test; // [485:474]
    csrng_reg2hw_cs_regen_reg_t cs_regen; // [473:473]
    csrng_reg2hw_cs_ctrl_reg_t cs_ctrl; // [472:468]
    csrng_reg2hw_cs_app_ins_req_mreg_t [3:0] cs_app_ins_req; // [467:460]
    csrng_reg2hw_cs_app_seed_clr_mreg_t [3:0] cs_app_seed_clr; // [459:452]
    csrng_reg2hw_cs_det_mode_mreg_t [3:0] cs_det_mode; // [451:448]
    csrng_reg2hw_cs_app_ins_seed_mreg_t [3:0] cs_app_ins_seed; // [447:316]
    csrng_reg2hw_cs_app_res_req_mreg_t [3:0] cs_app_res_req; // [315:308]
    csrng_reg2hw_cs_app_gen_req_mreg_t [3:0] cs_app_gen_req; // [307:300]
    csrng_reg2hw_cs_app_rnd_out_clr_mreg_t [3:0] cs_app_rnd_out_clr; // [299:292]
    csrng_reg2hw_cs_app_pre_res_mreg_t [3:0] cs_app_pre_res; // [291:288]
    csrng_reg2hw_cs_rnd_out_bits_mreg_t [3:0] cs_rnd_out_bits; // [287:156]
    csrng_reg2hw_cs_app_upd_req_mreg_t [3:0] cs_app_upd_req; // [155:148]
    csrng_reg2hw_cs_add_data_clr_mreg_t [3:0] cs_add_data_clr; // [147:140]
    csrng_reg2hw_cs_add_data_in_mreg_t [3:0] cs_add_data_in; // [139:8]
    csrng_reg2hw_cs_app_uni_req_mreg_t [3:0] cs_app_uni_req; // [7:0]
  } csrng_reg2hw_t;

  ///////////////////////////////////////
  // Internal design logic to register //
  ///////////////////////////////////////
  typedef struct packed {
    csrng_hw2reg_intr_state_reg_t intr_state; // [286:281]
    csrng_hw2reg_cs_sum_sts_reg_t cs_sum_sts; // [280:281]
    csrng_hw2reg_cs_app_ins_ack_mreg_t [3:0] cs_app_ins_ack; // [280:273]
    csrng_hw2reg_cs_app_ins_sts_mreg_t [3:0] cs_app_ins_sts; // [272:261]
    csrng_hw2reg_cs_app_seed_fifo_sts_mreg_t [3:0] cs_app_seed_fifo_sts; // [260:253]
    csrng_hw2reg_cs_app_res_ack_mreg_t [3:0] cs_app_res_ack; // [252:245]
    csrng_hw2reg_cs_app_res_sts_mreg_t [3:0] cs_app_res_sts; // [244:233]
    csrng_hw2reg_cs_app_gen_ack_mreg_t [3:0] cs_app_gen_ack; // [232:225]
    csrng_hw2reg_cs_app_gen_sts_mreg_t [3:0] cs_app_gen_sts; // [224:213]
    csrng_hw2reg_cs_app_gen_rnd_out_vld_mreg_t [3:0] cs_app_gen_rnd_out_vld; // [212:209]
    csrng_hw2reg_cs_rnd_out_bits_mreg_t [3:0] cs_rnd_out_bits; // [208:81]
    csrng_hw2reg_cs_app_upd_ack_mreg_t [3:0] cs_app_upd_ack; // [80:73]
    csrng_hw2reg_cs_app_upd_sts_mreg_t [3:0] cs_app_upd_sts; // [72:61]
    csrng_hw2reg_cs_add_data_fifo_sts_mreg_t [3:0] cs_add_data_fifo_sts; // [60:53]
    csrng_hw2reg_cs_app_uni_ack_mreg_t [3:0] cs_app_uni_ack; // [52:45]
    csrng_hw2reg_cs_app_uni_sts_mreg_t [3:0] cs_app_uni_sts; // [44:33]
  } csrng_hw2reg_t;

  // Register Address
  parameter logic [7:0] CSRNG_INTR_STATE_OFFSET = 8'h 0;
  parameter logic [7:0] CSRNG_INTR_ENABLE_OFFSET = 8'h 4;
  parameter logic [7:0] CSRNG_INTR_TEST_OFFSET = 8'h 8;
  parameter logic [7:0] CSRNG_CS_REGEN_OFFSET = 8'h c;
  parameter logic [7:0] CSRNG_CS_CTRL_OFFSET = 8'h 10;
  parameter logic [7:0] CSRNG_CS_SUM_STS_OFFSET = 8'h 14;
  parameter logic [7:0] CSRNG_CS_APP_INS_REQ_OFFSET = 8'h 18;
  parameter logic [7:0] CSRNG_CS_APP_SEED_CLR_OFFSET = 8'h 1c;
  parameter logic [7:0] CSRNG_CS_DET_MODE_OFFSET = 8'h 20;
  parameter logic [7:0] CSRNG_CS_APP_INS_ACK_OFFSET = 8'h 24;
  parameter logic [7:0] CSRNG_CS_APP_INS_STS_OFFSET = 8'h 28;
  parameter logic [7:0] CSRNG_CS_APP_SEED_FIFO_STS_OFFSET = 8'h 2c;
  parameter logic [7:0] CSRNG_CS_APP_INS_SEED0_OFFSET = 8'h 30;
  parameter logic [7:0] CSRNG_CS_APP_INS_SEED1_OFFSET = 8'h 34;
  parameter logic [7:0] CSRNG_CS_APP_INS_SEED2_OFFSET = 8'h 38;
  parameter logic [7:0] CSRNG_CS_APP_INS_SEED3_OFFSET = 8'h 3c;
  parameter logic [7:0] CSRNG_CS_APP_RES_REQ_OFFSET = 8'h 40;
  parameter logic [7:0] CSRNG_CS_APP_RES_ACK_OFFSET = 8'h 44;
  parameter logic [7:0] CSRNG_CS_APP_RES_STS_OFFSET = 8'h 48;
  parameter logic [7:0] CSRNG_CS_APP_GEN_REQ_OFFSET = 8'h 4c;
  parameter logic [7:0] CSRNG_CS_APP_RND_OUT_CLR_OFFSET = 8'h 50;
  parameter logic [7:0] CSRNG_CS_APP_PRE_RES_OFFSET = 8'h 54;
  parameter logic [7:0] CSRNG_CS_APP_GEN_ACK_OFFSET = 8'h 58;
  parameter logic [7:0] CSRNG_CS_APP_GEN_STS_OFFSET = 8'h 5c;
  parameter logic [7:0] CSRNG_CS_APP_GEN_RND_OUT_VLD_OFFSET = 8'h 60;
  parameter logic [7:0] CSRNG_CS_RND_OUT_BITS0_OFFSET = 8'h 64;
  parameter logic [7:0] CSRNG_CS_RND_OUT_BITS1_OFFSET = 8'h 68;
  parameter logic [7:0] CSRNG_CS_RND_OUT_BITS2_OFFSET = 8'h 6c;
  parameter logic [7:0] CSRNG_CS_RND_OUT_BITS3_OFFSET = 8'h 70;
  parameter logic [7:0] CSRNG_CS_APP_UPD_REQ_OFFSET = 8'h 74;
  parameter logic [7:0] CSRNG_CS_ADD_DATA_CLR_OFFSET = 8'h 78;
  parameter logic [7:0] CSRNG_CS_APP_UPD_ACK_OFFSET = 8'h 7c;
  parameter logic [7:0] CSRNG_CS_APP_UPD_STS_OFFSET = 8'h 80;
  parameter logic [7:0] CSRNG_CS_ADD_DATA_FIFO_STS_OFFSET = 8'h 84;
  parameter logic [7:0] CSRNG_CS_ADD_DATA_IN0_OFFSET = 8'h 88;
  parameter logic [7:0] CSRNG_CS_ADD_DATA_IN1_OFFSET = 8'h 8c;
  parameter logic [7:0] CSRNG_CS_ADD_DATA_IN2_OFFSET = 8'h 90;
  parameter logic [7:0] CSRNG_CS_ADD_DATA_IN3_OFFSET = 8'h 94;
  parameter logic [7:0] CSRNG_CS_APP_UNI_REQ_OFFSET = 8'h 98;
  parameter logic [7:0] CSRNG_CS_APP_UNI_ACK_OFFSET = 8'h 9c;
  parameter logic [7:0] CSRNG_CS_APP_UNI_STS_OFFSET = 8'h a0;


  // Register Index
  typedef enum int {
    CSRNG_INTR_STATE,
    CSRNG_INTR_ENABLE,
    CSRNG_INTR_TEST,
    CSRNG_CS_REGEN,
    CSRNG_CS_CTRL,
    CSRNG_CS_SUM_STS,
    CSRNG_CS_APP_INS_REQ,
    CSRNG_CS_APP_SEED_CLR,
    CSRNG_CS_DET_MODE,
    CSRNG_CS_APP_INS_ACK,
    CSRNG_CS_APP_INS_STS,
    CSRNG_CS_APP_SEED_FIFO_STS,
    CSRNG_CS_APP_INS_SEED0,
    CSRNG_CS_APP_INS_SEED1,
    CSRNG_CS_APP_INS_SEED2,
    CSRNG_CS_APP_INS_SEED3,
    CSRNG_CS_APP_RES_REQ,
    CSRNG_CS_APP_RES_ACK,
    CSRNG_CS_APP_RES_STS,
    CSRNG_CS_APP_GEN_REQ,
    CSRNG_CS_APP_RND_OUT_CLR,
    CSRNG_CS_APP_PRE_RES,
    CSRNG_CS_APP_GEN_ACK,
    CSRNG_CS_APP_GEN_STS,
    CSRNG_CS_APP_GEN_RND_OUT_VLD,
    CSRNG_CS_RND_OUT_BITS0,
    CSRNG_CS_RND_OUT_BITS1,
    CSRNG_CS_RND_OUT_BITS2,
    CSRNG_CS_RND_OUT_BITS3,
    CSRNG_CS_APP_UPD_REQ,
    CSRNG_CS_ADD_DATA_CLR,
    CSRNG_CS_APP_UPD_ACK,
    CSRNG_CS_APP_UPD_STS,
    CSRNG_CS_ADD_DATA_FIFO_STS,
    CSRNG_CS_ADD_DATA_IN0,
    CSRNG_CS_ADD_DATA_IN1,
    CSRNG_CS_ADD_DATA_IN2,
    CSRNG_CS_ADD_DATA_IN3,
    CSRNG_CS_APP_UNI_REQ,
    CSRNG_CS_APP_UNI_ACK,
    CSRNG_CS_APP_UNI_STS
  } csrng_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] CSRNG_PERMIT [41] = '{
    4'b 0001, // index[ 0] CSRNG_INTR_STATE
    4'b 0001, // index[ 1] CSRNG_INTR_ENABLE
    4'b 0001, // index[ 2] CSRNG_INTR_TEST
    4'b 0001, // index[ 3] CSRNG_CS_REGEN
    4'b 0111, // index[ 4] CSRNG_CS_CTRL
    4'b 1111, // index[ 5] CSRNG_CS_SUM_STS
    4'b 0001, // index[ 6] CSRNG_CS_APP_INS_REQ
    4'b 0001, // index[ 7] CSRNG_CS_APP_SEED_CLR
    4'b 0001, // index[ 8] CSRNG_CS_DET_MODE
    4'b 0001, // index[ 9] CSRNG_CS_APP_INS_ACK
    4'b 0001, // index[10] CSRNG_CS_APP_INS_STS
    4'b 0001, // index[11] CSRNG_CS_APP_SEED_FIFO_STS
    4'b 1111, // index[12] CSRNG_CS_APP_INS_SEED0
    4'b 1111, // index[13] CSRNG_CS_APP_INS_SEED1
    4'b 1111, // index[14] CSRNG_CS_APP_INS_SEED2
    4'b 1111, // index[15] CSRNG_CS_APP_INS_SEED3
    4'b 0001, // index[16] CSRNG_CS_APP_RES_REQ
    4'b 0001, // index[17] CSRNG_CS_APP_RES_ACK
    4'b 0001, // index[18] CSRNG_CS_APP_RES_STS
    4'b 0001, // index[19] CSRNG_CS_APP_GEN_REQ
    4'b 0001, // index[20] CSRNG_CS_APP_RND_OUT_CLR
    4'b 0001, // index[21] CSRNG_CS_APP_PRE_RES
    4'b 0001, // index[22] CSRNG_CS_APP_GEN_ACK
    4'b 0001, // index[23] CSRNG_CS_APP_GEN_STS
    4'b 0001, // index[24] CSRNG_CS_APP_GEN_RND_OUT_VLD
    4'b 1111, // index[25] CSRNG_CS_RND_OUT_BITS0
    4'b 1111, // index[26] CSRNG_CS_RND_OUT_BITS1
    4'b 1111, // index[27] CSRNG_CS_RND_OUT_BITS2
    4'b 1111, // index[28] CSRNG_CS_RND_OUT_BITS3
    4'b 0001, // index[29] CSRNG_CS_APP_UPD_REQ
    4'b 0001, // index[30] CSRNG_CS_ADD_DATA_CLR
    4'b 0001, // index[31] CSRNG_CS_APP_UPD_ACK
    4'b 0001, // index[32] CSRNG_CS_APP_UPD_STS
    4'b 0001, // index[33] CSRNG_CS_ADD_DATA_FIFO_STS
    4'b 1111, // index[34] CSRNG_CS_ADD_DATA_IN0
    4'b 1111, // index[35] CSRNG_CS_ADD_DATA_IN1
    4'b 1111, // index[36] CSRNG_CS_ADD_DATA_IN2
    4'b 1111, // index[37] CSRNG_CS_ADD_DATA_IN3
    4'b 0001, // index[38] CSRNG_CS_APP_UNI_REQ
    4'b 0001, // index[39] CSRNG_CS_APP_UNI_ACK
    4'b 0001  // index[40] CSRNG_CS_APP_UNI_STS
  };
endpackage

